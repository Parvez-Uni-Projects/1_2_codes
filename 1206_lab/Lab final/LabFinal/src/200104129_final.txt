// main class 

import java.util.Scanner;
import myexceptions.*;
public class App {

    public static void main(String[] args) throws Exception {
      
        Scanner input = new Scanner(System.in);

        System.out.println("Input a Code");

        int   user_input = input.nextInt();
        
        Transceiver obj =  new Transceiver();
        
        obj.setCode(user_input);

        try {
            obj.inspectSignal();
        } catch (InvalidInformationException e) {
            System.out.println("Exception is" + e);
        }

    }
}


import myexceptions.*;
public interface Signal {

    void inspectSignal () throws InvalidInformationException; 
}


public abstract class ControlCenter implements Signal {

    private int code;

    public int getCode() {
        return code;
    }
    public void setCode(int code) {
        this.code = code;
    }
    
}


import myexceptions.*;
public class Transceiver extends ControlCenter {


    @Override
    public void inspectSignal() throws InvalidInformationException {

        int  i;
        boolean flag = false;

        for (i = 2; i <= getCode() / 2; ++i) {
            // condition for non-prime
            if (getCode() % i == 0) {
              flag = true;
              break;
            }
          }
        
        if (flag)
        {
            throw new InvalidInformationException("Invalid Signal Received! Please Discard it");
            
        }
        else
        {
            System.out.println("Signal Received with Information!");
            Translator translator = new Translator();
            translator.decodeSignal(getCode());
        }
         

    }
    
}


public class Translator {

    void decodeSignal(int code)
    {
        if (code == 2) System.out.println("Minerals Found");
        else if (code == 3) System.out.println("Microorganism Found");
        else if (code > 3) System.out.println("Water Found");   
    }
    
}


package myexceptions;

public class InvalidInformationException extends Exception{


    public InvalidInformationException ()
    {
        super();
    }

    public InvalidInformationException (String message)
    {
        super(message);
    }


    
}
